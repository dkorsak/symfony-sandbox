imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi: ~
    translator: { fallback: %locale% }
    secret: %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale: "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session: ~
        #handler_id: session.handler.memcached
        #handler_id: session.handler.pdo
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals: ~

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    #read_from: ~
    #write_to: ~
    #bundles:        [ ]
    #java:           /usr/bin/java
    #node:           /usr/bin/node
    #ruby:           /usr/bin/ruby
    #sass:           /usr/bin/sass
    filters:
        cssrewrite: ~
        sass:    ~
        compass: ~
            #images_dir: %kernel.root_dir%/../src/App/FrontendBundle/Resources/public/img
            #http_path: /bundles/appfrontend
        closure:
            jar: %kernel.root_dir%/Resources/java/compiler.jar
        yui_css:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar
        yui_js:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar
        less:
            node: %less.node%
            node_paths: [%less.node_paths%]

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                dql: ~
                metadata_cache_driver: ~
                result_cache_driver: ~
                query_cache_driver: ~
                mappings:
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity/MappedSuperclass"
                        alias: GedmoTranslatable
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator
                        is_bundle: false
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity/MappedSuperclass"
                        alias: GedmoLoggable
                        is_bundle: false
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree
                        is_bundle: false
                filters:
                    gedmo_softdeleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: false
                auto_mapping: true

# Stof Configuration
stof_doctrine_extensions:
    default_locale: %locale%
    translation_fallback: true
    persist_default_translation: true
    uploadable:
        # Default file path: This is one of the three ways you can configure the path for the Uploadable extension
        default_file_path:       %kernel.root_dir%/../web/uploads
        # Mime type guesser class: Optional. By default, we provide an adapter for the one present in the HttpFoundation component of Symfony
        mime_type_guesser_class: Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter
        # Default file info class implementing FileInfoInterface: Optional. By default we provide a class which is prepared to receive an UploadedFile instance.
        default_file_info_class: Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo
    orm:
        default:
            timestampable:  true
            translatable:   false
            blameable:      false
            sluggable:      true
            tree:           false
            loggable:       false
            sortable:       false
            softdeleteable: false
            uploadable:     false

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
    # should be empty in parameters.yml file for production configuration
    delivery_address: "%swiftmailer_delivery_address%"

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: App\GeneralBundle\Entity\User
    group:
        group_class: App\GeneralBundle\Entity\Group
    service:
        user_manager: app_general.services.user_manager

# Sonata Configuration
sonata_cache:
    caches:
        memcached:
            prefix:  %memcached_prefix%
            servers:
                - {host: %memcached_host%, port: %memcached_port%}

sonata_admin:
    #security:
    #    handler: sonata.admin.security.handler.role

    title:      Content Management System
    title_logo: /bundles/appbackend/images/cms.gif
    options:
        html5_validate: true #disable or enable global form HTML5 validation
        confirm_exit: true #disable or enable confirm exit from page
        use_select2: false #disable or enable using select2 - style input select - experimental
        pager_links: 10     # pager max links to display if is null is getting from BaseAdmin
    templates:
        user_block:                 "SonataAdminBundle:Core:user_block.html.twig"
        layout:                     "AppBackendBundle::standard_layout.html.twig"
        ajax:                       "SonataAdminBundle::ajax_layout.html.twig"
        dashboard:                  "SonataAdminBundle:Core:dashboard.html.twig"
        search:                     "SonataAdminBundle:Core:search.html.twig"
        list:                       "AppBackendBundle:CRUD:list.html.twig"
        show:                       "SonataAdminBundle:CRUD:show.html.twig"
        edit:                       "AppBackendBundle:CRUD:edit.html.twig"
        preview:                    "SonataAdminBundle:CRUD:preview.html.twig"
        history:                    "SonataAdminBundle:CRUD:history.html.twig"
        acl:                        "SonataAdminBundle:CRUD:acl.html.twig"
        history_revision_timestamp: "SonataAdminBundle:CRUD:history_revision_timestamp.html.twig"
        action:                     "SonataAdminBundle:CRUD:action.html.twig"
        select:                     "SonataAdminBundle:CRUD:list__select.html.twig"
        list_block:                 "SonataAdminBundle:Block:block_admin_list.html.twig"
        search_result_block:        "SonataAdminBundle:Block:block_search_result.html.twig"
        short_object_description:   "SonataAdminBundle:Helper:short-object-description.html.twig"
        delete:                     "SonataAdminBundle:CRUD:delete.html.twig"
        batch:                      "SonataAdminBundle:CRUD:list__batch.html.twig"
        batch_confirmation:         "SonataAdminBundle:CRUD:batch_confirmation.html.twig"
        inner_list_row:             "SonataAdminBundle:CRUD:list_inner_row.html.twig"
        base_list_field:            "SonataAdminBundle:CRUD:base_list_field.html.twig"
        pager_links:                "SonataAdminBundle:Pager:links.html.twig"
        pager_results:              "SonataAdminBundle:Pager:results.html.twig"
    persist_filters: true #keep filters in session
    dashboard:
        blocks:
            # display a dashboard blocks
            - { position: left, type: app_backend.block.apc_block }
            - { position: left, type: app_backend.block.opcache_block }
            - { position: right, type: app_backend.block.memcached_block }

sonata_doctrine_orm_admin:
    # default value is null, so doctrine uses the value defined in the configuration
    entity_manager: ~

    templates:
        form:
            - SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig
        filter:
            - SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig
        types:
            list:
                array:            SonataAdminBundle:CRUD:list_array.html.twig
                boolean:          SonataAdminBundle:CRUD:list_boolean.html.twig
                date:             AppBackendBundle:CRUD:list_date.html.twig
                time:             SonataAdminBundle:CRUD:list_time.html.twig
                datetime:         AppBackendBundle:CRUD:list_datetime.html.twig
                text:             SonataAdminBundle:CRUD:list_string.html.twig
                trans:            SonataAdminBundle:CRUD:list_trans.html.twig
                string:           SonataAdminBundle:CRUD:list_string.html.twig
                smallint:         SonataAdminBundle:CRUD:list_string.html.twig
                bigint:           SonataAdminBundle:CRUD:list_string.html.twig
                integer:          SonataAdminBundle:CRUD:list_string.html.twig
                decimal:          SonataAdminBundle:CRUD:list_string.html.twig
                identifier:       SonataAdminBundle:CRUD:list_string.html.twig
                currency:         SonataAdminBundle:CRUD:list_currency.html.twig
                percent:          SonataAdminBundle:CRUD:list_percent.html.twig
                choice:           SonataAdminBundle:CRUD:list_choice.html.twig

            show:
                array:            SonataAdminBundle:CRUD:show_array.html.twig
                boolean:          AppBackendBundle:CRUD:show_boolean.html.twig
                date:             SonataAdminBundle:CRUD:show_date.html.twig
                time:             SonataAdminBundle:CRUD:show_time.html.twig
                datetime:         SonataAdminBundle:CRUD:show_datetime.html.twig
                text:             SonataAdminBundle:CRUD:base_show_field.html.twig
                textarea:         SonataAdminBundle:CRUD:list_string.html.twig
                email:            SonataAdminBundle:CRUD:list_string.html.twig
                trans:            SonataAdminBundle:CRUD:show_trans.html.twig
                string:           SonataAdminBundle:CRUD:base_show_field.html.twig
                smallint:         SonataAdminBundle:CRUD:base_show_field.html.twig
                bigint:           SonataAdminBundle:CRUD:base_show_field.html.twig
                integer:          SonataAdminBundle:CRUD:base_show_field.html.twig
                decimal:          SonataAdminBundle:CRUD:base_show_field.html.twig
                currency:         SonataAdminBundle:CRUD:base_currency.html.twig
                percent:          SonataAdminBundle:CRUD:base_percent.html.twig
                choice:           SonataAdminBundle:CRUD:show_choice.html.twig

# Sonata block configuration
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.admin.block.search_result: ~
        app_backend.block.apc_block:
            cache: sonata.cache.memcached
            settings: {ttl: 60, use_cache: true}
        app_backend.block.memcached_block:
            cache: sonata.cache.memcached
            settings: {ttl: 60, use_cache: true}
        app_backend.block.opcache_block:
            cache: sonata.cache.memcached
            settings: {ttl: 60, use_cache: true}

sonata_user:
    security_acl:     false
    class:
        user:         App\GeneralBundle\Entity\User
        group:        App\GeneralBundle\Entity\Group

    profile:
        form:
            type:               app_backend_form_profile_profile_type
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile, Default]

# Default SEO settings for frontend website
sonata_seo:
    default:          sonata.seo.page.default #service
    encoding:         UTF-8
    page:
        title:            Symfony2 Sandbox
        metas:
            name:
                keywords:             ""
                description:          ""
                robots:               index, follow
                viewport:             width=device-width, initial-scale=1.0

            #property:
                # Facebook application settings
                #'fb:app_id':          XXXXXX
                #'fb:admins':          admin1, admin2
                #'og:site_name':       Sonata Project Sandbox
                #'og:description':     A demo of the some rich bundles for your Symfony2 projects

            http-equiv:
                'Content-Type':         text/html; charset=utf-8
                'X-Ua-Compatible':      IE=edge,chrome=1

        head:
            'lang':     'en'
            #'xmlns:og':           http://opengraphprotocol.org/schema/
            #'xmlns:fb':           "http://www.facebook.com/2008/fbml"

# Genmenu form configuration
genemu_form:
    date: ~

#Vich uploader configuration
vich_uploader:
    db_driver: orm # or mongodb
    gaufrette: true
    storage: vich_uploader.storage.gaufrette
    mappings:
        article_image:
            uri_prefix: /uploads/articles
            upload_destination: article_image_fs
            namer: app_demo.vich.namer.article_image_namer
            delete_on_remove: true
            inject_on_load: true

# Gaufrette configuration
knp_gaufrette:
    stream_wrapper:
        protocol: gaufrette
    adapters:
        article_adaper:
            local:
                directory: %kernel.root_dir%/../web/uploads/articles
    filesystems:
        article_image_fs:
            adapter:    article_adaper

# Lipp imagine configuration
liip_imagine:
    driver:               gd #gd, imagick, gmagick
    web_root:             %kernel.root_dir%/../web
    data_root:            %kernel.root_dir%/../web/uploads
    cache_mkdir_mode:     0777
    cache_prefix:         /uploads/cache
    cache:                web_path
    cache_clearer:        true
    data_loader:          filesystem
    controller_action:    liip_imagine.controller:filterAction
    filter_sets:
        article_thumb:
            filters:
                relative_resize: { scale: 0.5 }

#LexikMaintenanceBundle https://github.com/lexik/LexikMaintenanceBundle
lexik_maintenance:
    authorized:
        path: "(/admin|/uploads|/bundles|/favico)"
        ips: ['127.0.0.1']
    driver:
        ttl: 3600
        # File driver
        #class: '\Lexik\Bundle\MaintenanceBundle\Drivers\FileDriver'                # class for file driver
        #options: {file_path: %kernel.root_dir%/cache/lock}                         # file_path is the complete path for create the file
        # MemCache driver
        #class: Lexik\Bundle\MaintenanceBundle\Drivers\MemCacheDriver               # class for MemCache driver
        #options: {key_name: 'maintenance', host: 127.0.0.1, port: 11211}           # need to define a key_name, the host and port
        # Database driver:
        class: 'Lexik\Bundle\MaintenanceBundle\Drivers\DatabaseDriver'             # class for database driver

#https://github.com/ornicar/ApcBundle
ornicar_apc:
    host: %server_name%
    web_dir: %kernel.root_dir%/../web
    mode: curl

#https://github.com/Redexperts/RedexpertsErrbitBundle
redexperts_errbit:
    errbit:
        errbit_enable_log: %errbit_enable_log%
        api_key:           %errbit_api_key%
        host:              %errbit_host%
        port:              80
        environment_name:  %errbit_environment_name%
        skipped_exceptions:  []

parameters:
    # symfony pdo session database params
    pdo.db_options:
        db_table:    session
        db_id_col:   session_id
        db_data_col: session_value
        db_time_col: session_time
    #disabe or enable routing caching
    disable_routing_cache: false

services:
    # store symfony session in memcached
    session.memcached:
        class: Memcached
        calls:
          - [ addServer, [ %memcached_host%, %memcached_port% ]]

    session.handler.memcached:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler
        arguments: [ @session.memcached, { prefix: %memcached_session_prefix%, expiretime: %memcached_session_expire% } ]

    # store symfony session in PDO
    pdo:
        class: PDO
        arguments:
            - "mysql:dbname=%database_name%;host=%database_host%;port=%database_port%"
            - %database_user%
            - %database_password%
        calls:
            - [setAttribute, [3, 2]] # \PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION

    session.handler.pdo:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler
        arguments: [@pdo, %pdo.db_options%]
